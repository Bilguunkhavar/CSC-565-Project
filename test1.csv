HLC instruction,YMC Address,YMC assembly,YMC encoding,Modified registers,Modified flags
unsigned a b,0,"usera: US 0\nuserb: US 0","",,
signed x y,0,"userx: S 0\nusery: S 0","",,
a = 10,4,"MOV eax, 10\nMOV [usera], eax","AA 00 01 0A\nAC 00 B0 01",eax,
b = 2,8,"MOV eax, 2\nMOV [userb], eax","AA 00 01 02\nAC 00 B1 01",eax,
x = 5,16,"MOV eax, 5\nMOV [userx], eax","AA 00 01 05\nAC 00 A0 01",eax,
y = 1,24,"MOV eax, 1\nMOV [usery], eax","AA 00 01 01\nAC 00 A1 01",eax,
while x < 0,32,"userWhile0Start:\nMOV eax, [userx]\nMOV ebx, 0\nCMP eax, ebx\nJL userWhile0","AD 00 01 A0\nAA 00 02 00\nF0 01 02 00\nD2 00\nAD 00 01 A0",eax ebx,
    print x,64,"MOV eax, [userx]\nPRINTV","82 00",eax,
    print "\n",66,"MOV eax, [print0]\nPRINT","AD 00 01 C0\n80 00",eax,
    x = x + y,72,"MOV eax, [userx]\nMOV ebx, [usery]\nADD eax, ebx\nMOV [userx], eax","AD 00 01 A0\nAD 00 02 A1\nB0 00 01 02\nAC 00 A0 01",eax ebx,
while a > 0,46,"jmp userWhile0Start\nuserWhile1Start:\nMOV eax, [usera]\nMOV ebx, 0\nCMP eax, ebx\nJG userWhile1","AD 00 01 B0\nAA 00 02 00\nF0 01 02 00\nD0 00",eax ebx,
    print "\n",88,"MOV eax, [print1]\nPRINT","AD 00 01 C1\n80 00",eax,
    a = a - b,94,"MOV eax, [usera]\nMOV ebx, [userb]\nSUB eax, ebx\nMOV [usera], eax\njmp userWhile1Start","AD 00 01 B0\nAD 00 02 B1\nB1 00 01 02\nAC 00 B0 01",eax ebx,